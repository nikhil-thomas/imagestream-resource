/*
Copyright 2019 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/imagestream-resource/pkg/apis/openshift/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ImagestreamResourceLister helps list ImagestreamResources.
type ImagestreamResourceLister interface {
	// List lists all ImagestreamResources in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ImagestreamResource, err error)
	// ImagestreamResources returns an object that can list and get ImagestreamResources.
	ImagestreamResources(namespace string) ImagestreamResourceNamespaceLister
	ImagestreamResourceListerExpansion
}

// imagestreamResourceLister implements the ImagestreamResourceLister interface.
type imagestreamResourceLister struct {
	indexer cache.Indexer
}

// NewImagestreamResourceLister returns a new ImagestreamResourceLister.
func NewImagestreamResourceLister(indexer cache.Indexer) ImagestreamResourceLister {
	return &imagestreamResourceLister{indexer: indexer}
}

// List lists all ImagestreamResources in the indexer.
func (s *imagestreamResourceLister) List(selector labels.Selector) (ret []*v1alpha1.ImagestreamResource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ImagestreamResource))
	})
	return ret, err
}

// ImagestreamResources returns an object that can list and get ImagestreamResources.
func (s *imagestreamResourceLister) ImagestreamResources(namespace string) ImagestreamResourceNamespaceLister {
	return imagestreamResourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ImagestreamResourceNamespaceLister helps list and get ImagestreamResources.
type ImagestreamResourceNamespaceLister interface {
	// List lists all ImagestreamResources in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ImagestreamResource, err error)
	// Get retrieves the ImagestreamResource from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ImagestreamResource, error)
	ImagestreamResourceNamespaceListerExpansion
}

// imagestreamResourceNamespaceLister implements the ImagestreamResourceNamespaceLister
// interface.
type imagestreamResourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ImagestreamResources in the indexer for a given namespace.
func (s imagestreamResourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ImagestreamResource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ImagestreamResource))
	})
	return ret, err
}

// Get retrieves the ImagestreamResource from the indexer for a given namespace and name.
func (s imagestreamResourceNamespaceLister) Get(name string) (*v1alpha1.ImagestreamResource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("imagestreamresource"), name)
	}
	return obj.(*v1alpha1.ImagestreamResource), nil
}
